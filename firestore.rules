
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {    
    match /users/{userId} {
      allow read;
      allow create: 
      if request.auth != null 
      && request.auth.uid == userId
      && request.resource.data.createdAt == request.time
      && request.resource.data.updatedAt == request.time;
      allow updata:
      if request.auth != null 
      && request.auth.uid == userId
      && request.resource.data.createdAt == resource.data.createdAt
      && request.resource.data.updatedAt == request.time;
      allow delete:
      if request.auth != null 
      && request.auth.uid == userId;
    }
    
    match /users/{userId}/solved_problems/{problemId} {
    	allow read;
      allow create:
      if request.auth != null 
      && request.auth.uid == userId
      &&  request.resource.data.createdAt == request.time
      && request.resource.data.updatedAt == request.time;
      allow updata:
      if request.auth != null 
      && request.auth.uid == userId
      && request.resource.data.createdAt == resource.data.createdAt
      && request.resource.data.updatedAt == request.time;
      allow delete:
      if request.auth != null 
      && request.auth.uid == userId;
    }
    
    match /users/{userId}/aoj_data/userData {
    	allow read;
      allow create:
      if request.auth != null 
      && request.auth.uid == userId
      && request.resource.data.createdAt == request.time
      && request.resource.data.updatedAt == request.time;
      allow updata:
      if request.auth != null 
      && request.auth.uid == userId
      && request.resource.data.createdAt == resource.data.createdAt
      && request.resource.data.updatedAt == request.time;
      allow delete:
      if request.auth != null 
      && request.auth.uid == userId;
    }
  }
}

// rules_version = '2';
// service cloud.firestore {
//   match /databases/{database}/documents {

//     // This rule allows anyone on the internet to view, edit, and delete
//     // all data in your Firestore database. It is useful for getting
//     // started, but it is configured to expire after 30 days because it
//     // leaves your app open to attackers. At that time, all client
//     // requests to your Firestore database will be denied.
//     //
//     // Make sure to write security rules for your app before that time, or else
//     // your app will lose access to your Firestore database
//     match /{document=**} {
//       allow read, write: if request.time < timestamp.date(2020, 1, 27);
//     }
//   }
// }

